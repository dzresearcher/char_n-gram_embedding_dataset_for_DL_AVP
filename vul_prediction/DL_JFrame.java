/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package zm.vul_prediction;

import java.io.File;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.ObjectOutputStream;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;




/**
 *
 * @author zm
 */

/**
 * Set filter for the file chooser
 * From stackoverflow with some change :)
 *
*/

class MyCustomFilter2 extends javax.swing.filechooser.FileFilter {
        @Override
        public boolean accept(File file) {
            // Allow only directories, or files with ".arff" extension
            return file.isDirectory() || file.getAbsolutePath().endsWith(".arff");
        }
        @Override
        public String getDescription() {
            // This description will be displayed in the dialog,
            // hard-coded = ugly, should be done via I18N
            return "ARFF Files (*.arff)";
        }
    }

public class DL_JFrame extends javax.swing.JFrame {

    /**
     * Creates new form DL_JFrame
     */
    public DL_JFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Dataset_jFileChooser = new javax.swing.JFileChooser();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Trn_Dtst_LSTM_jTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        Validation_Type_RNN_jComboBox = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        Num_Folds_LSTM_jTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        Opts_LSTM_jTextField = new javax.swing.JTextField();
        Traine_Evaluate_LSTM_jButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Results_LSTM_jTextArea = new javax.swing.JTextArea();
        Brows_Dataset_LSTM_jButton = new javax.swing.JButton();
        Balance_Dataset_LSTM_jCheckBox = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Trn_Dtst_jTextField = new javax.swing.JTextField();
        Slct_Trn_Dtst_jButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        Opts_jTextField = new javax.swing.JTextField();
        Traine_jButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Results_jTextArea = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        Validation_Type_jComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        Num_Folds_jTextField = new javax.swing.JTextField();
        Balance_Dataset_jCheckBox = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        Tokens_File_jTextField = new javax.swing.JTextField();
        Brows_Dataset_RNN_jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Results_jTextArea2 = new javax.swing.JTextArea();

        Dataset_jFileChooser.setDialogTitle("Please select a file");
        Dataset_jFileChooser.setFileFilter(new MyCustomFilter2());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Training Dataset :");

        Trn_Dtst_LSTM_jTextField.setText("E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE\\Lower_Case_FC.txt_Unlabeled_Tokens.txt.arff");

        jLabel7.setText("Validation Type   :");

        Validation_Type_RNN_jComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cross-validation" }));
        Validation_Type_RNN_jComboBox.setToolTipText("Select validation type : Cross-validation, provide a test dataset, pourcent");
        Validation_Type_RNN_jComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Validation_Type_RNN_jComboBoxActionPerformed(evt);
            }
        });

        jLabel8.setText("Num Folds :");

        Num_Folds_LSTM_jTextField.setText("3");

        jLabel9.setText("Options :");

        Opts_LSTM_jTextField.setText("L1:0.01 L2:0.01 N:1000 DL:64 LSTML:128,64");

        Traine_Evaluate_LSTM_jButton.setText("Traine & Evaluate");
        Traine_Evaluate_LSTM_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Traine_Evaluate_LSTM_jButtonActionPerformed(evt);
            }
        });

        jLabel10.setText("Results :");

        Results_LSTM_jTextArea.setColumns(20);
        Results_LSTM_jTextArea.setRows(5);
        jScrollPane2.setViewportView(Results_LSTM_jTextArea);

        Brows_Dataset_LSTM_jButton.setText("Brows...");
        Brows_Dataset_LSTM_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Brows_Dataset_LSTM_jButtonActionPerformed(evt);
            }
        });

        Balance_Dataset_LSTM_jCheckBox.setText("Balance dataset");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(Trn_Dtst_LSTM_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                                .addComponent(Balance_Dataset_LSTM_jCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Brows_Dataset_LSTM_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Num_Folds_LSTM_jTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Validation_Type_RNN_jComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 244, Short.MAX_VALUE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Opts_LSTM_jTextField))
                            .addComponent(jScrollPane2))
                        .addContainerGap())))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(241, 241, 241)
                .addComponent(Traine_Evaluate_LSTM_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Trn_Dtst_LSTM_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Brows_Dataset_LSTM_jButton)
                    .addComponent(Balance_Dataset_LSTM_jCheckBox))
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(Validation_Type_RNN_jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(Num_Folds_LSTM_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Opts_LSTM_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addComponent(Traine_Evaluate_LSTM_jButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addGap(15, 15, 15)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("LSTM", jPanel2);

        jLabel1.setText("Training Dataset :");

        Slct_Trn_Dtst_jButton.setText("Select...");
        Slct_Trn_Dtst_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Slct_Trn_Dtst_jButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Options :");

        Opts_jTextField.setText("-L 0.01 -M 0.01 -N 1000 -V 0 -S 0 -E 20 -H 6 -batch-size 128");

        Traine_jButton.setText("Traine & Evaluate");
        Traine_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Traine_jButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Results :");

        Results_jTextArea.setColumns(20);
        Results_jTextArea.setRows(5);
        jScrollPane1.setViewportView(Results_jTextArea);

        jLabel5.setText("Validation Type   :");

        Validation_Type_jComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cross-validation" }));
        Validation_Type_jComboBox.setToolTipText("Select validation type : Cross-validation, provide a test dataset, pourcent");
        Validation_Type_jComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Validation_Type_jComboBoxActionPerformed(evt);
            }
        });

        jLabel6.setText("Num Folds :");

        Balance_Dataset_jCheckBox.setText("Balance dataset");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Validation_Type_jComboBox, 0, 163, Short.MAX_VALUE)
                                    .addComponent(Num_Folds_jTextField))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Trn_Dtst_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Balance_Dataset_jCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Slct_Trn_Dtst_jButton)
                                .addContainerGap())))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Opts_jTextField)
                        .addGap(101, 101, 101))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Traine_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(Trn_Dtst_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Slct_Trn_Dtst_jButton)
                            .addComponent(Balance_Dataset_jCheckBox))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(Validation_Type_jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(Num_Folds_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Opts_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addComponent(Traine_jButton)
                .addGap(9, 9, 9)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("MLP", jPanel1);

        jLabel11.setText("Tokens files");

        Tokens_File_jTextField.setText("E:\\ZM\\Research\\Colaborative_Works\\Dr_Mamdouh\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Data_version2\\Final_Dataset\\DDCD\\Vectors\\Lower_case_Code_gadgets_DDCD_for_training.txt_Unlabeled_Tokens.txt");

        Brows_Dataset_RNN_jButton1.setText("Brows...");
        Brows_Dataset_RNN_jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Brows_Dataset_RNN_jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("get  FastText vectors");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("get DF-IF");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel12.setText("Results :");

        Results_jTextArea2.setColumns(20);
        Results_jTextArea2.setRows(5);
        jScrollPane3.setViewportView(Results_jTextArea2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Tokens_File_jTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Brows_Dataset_RNN_jButton1))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(16, 16, 16))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(Tokens_File_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Brows_Dataset_RNN_jButton1))
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Dataset preparation", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("LSTM");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Slct_Trn_Dtst_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Slct_Trn_Dtst_jButtonActionPerformed
        // TODO add your handling code here:
        int returnVal = Dataset_jFileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = Dataset_jFileChooser.getSelectedFile();
            Trn_Dtst_jTextField.setText(file.getAbsolutePath());

        } else {
            //System.out.println("File access cancelled by user.");
        }
        
        
    }//GEN-LAST:event_Slct_Trn_Dtst_jButtonActionPerformed

    private void Traine_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Traine_jButtonActionPerformed
        try {                                               
            
            if ("".equals(Opts_jTextField.getText()) || "".equals(Trn_Dtst_jTextField.getText()) || "".equals(Num_Folds_jTextField.getText()))
            {
                Results_jTextArea.setText("Please fill all fields with correct values");
            }
            else
            {
                DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");  
                LocalDateTime now;
                String Start_Time = "";
                String End_Time="";
                
                boolean Balance_Dataset = false;
                
                dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");  
                now = LocalDateTime.now();  
                Start_Time = dtf.format(now).toString();
                
                if( Balance_Dataset_jCheckBox.isSelected())
                {
                    Balance_Dataset = true;
                }
                else
                {
                    Balance_Dataset = false;
                }
                
                MLP My_MLP = new MLP(Opts_jTextField.getText(), Trn_Dtst_jTextField.getText()/*, Tst_Dtst_jTextField.getText()*/);
                My_MLP.Build_MLP(Balance_Dataset);
                
                now = LocalDateTime.now();  
                End_Time = dtf.format(now).toString();
                
                
                
                String Exprement_Details = "Dataset : " + Trn_Dtst_jTextField.getText() + "\n" +
                        "Balanced data : " + Balance_Dataset + "\n"+
                        "Cross-Validation :"+ Num_Folds_jTextField.getText() +"Folds" + "\n" +
                        "NN Options : " + Opts_jTextField.getText() + "\n";
                
                Results_jTextArea.setText(Exprement_Details +"\n"+ My_MLP.Evaluate_MLP_CV(Integer.parseInt(Num_Folds_jTextField.getText()), Balance_Dataset) +
                    "\n" +
                    "Start Time :" +
                    Start_Time +
                    "\n" +
                    "End Time :" +
                    End_Time );
                
                // save model to file
                dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd_HH-mm-ss");  
                now = LocalDateTime.now();  
                String Results_Time = dtf.format(now);
                
            
                try (ObjectOutputStream oos = new ObjectOutputStream(
                    new FileOutputStream("MODEL_"+Results_Time+".model"))) {
                oos.writeObject(My_MLP.Mlp);
                oos.flush();
                
                }
                              
                // save results to txt file    
                try (FileWriter outFile = new FileWriter("RESULTS_"+Results_Time+".txt",true)) {
                    outFile.write(Results_jTextArea.getText());
                }                
            }
            
        } catch (Exception ex) {
            Logger.getLogger(DL_JFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_Traine_jButtonActionPerformed

    private void Validation_Type_jComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Validation_Type_jComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Validation_Type_jComboBoxActionPerformed

    private void Brows_Dataset_LSTM_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Brows_Dataset_LSTM_jButtonActionPerformed
        int returnVal = Dataset_jFileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = Dataset_jFileChooser.getSelectedFile();
            Trn_Dtst_LSTM_jTextField.setText(file.getAbsolutePath());

        } else {
            //System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_Brows_Dataset_LSTM_jButtonActionPerformed

    private void Traine_Evaluate_LSTM_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Traine_Evaluate_LSTM_jButtonActionPerformed
        
        try 
        {                                                       
            if ("".equals(Opts_LSTM_jTextField.getText()) || "".equals(Trn_Dtst_LSTM_jTextField.getText()) || "".equals(Num_Folds_LSTM_jTextField.getText()))
            {
                Results_LSTM_jTextArea.setText("Please fill all fields with correct values");
            }
            else
            {
                String Train_Dataset_File_Name = Trn_Dtst_LSTM_jTextField.getText();
                int Num_Folds = Integer.parseInt(Num_Folds_LSTM_jTextField.getText());
                String Options = Opts_LSTM_jTextField.getText();
                
                DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");  
                LocalDateTime now;
                String Start_Time = "";
                String End_Time="";
                
                boolean Balance_Dataset = false;
                
                dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");  
                now = LocalDateTime.now();  
                Start_Time = dtf.format(now).toString();
                
                if( Balance_Dataset_LSTM_jCheckBox.isSelected())
                {
                    Balance_Dataset = true;
                }
                else
                {
                    Balance_Dataset = false;
                }
                
                LSTM_Classifier Lstm_Clf = new LSTM_Classifier();
                
                String Evaluation_Results =  Lstm_Clf.Build_Evaluate_LSTM(Train_Dataset_File_Name, Options, Num_Folds, Balance_Dataset);
                
                
                
                now = LocalDateTime.now();  
                End_Time = dtf.format(now).toString();
                
                
                
                String Exprement_Details = "Dataset : " +
                        Trn_Dtst_LSTM_jTextField.getText() + "\n" +
                        "Balanced data : " + Balance_Dataset + "\n"+
                        "Cross-Validation :"+ Num_Folds_LSTM_jTextField.getText() +"Folds" + "\n" +
                        "NN Options : " + Opts_LSTM_jTextField.getText() + "\n";
                
                Results_LSTM_jTextArea.setText(Exprement_Details +"\n" + 
                                               Evaluation_Results + "\n" +
                                               "Start Time :" +
                                                Start_Time +"\n" +
                                                "End Time :" +
                                                End_Time 
                                               );
                // save model to file
                dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd_HH-mm-ss");  
                now = LocalDateTime.now();  
                String Results_Time = dtf.format(now);
                
            
                try (ObjectOutputStream oos = new ObjectOutputStream(
                    new FileOutputStream("MODEL_"+Results_Time+".model"))) {
                oos.writeObject(Lstm_Clf.LSTM_Clf);
                oos.flush();
                
                }
                              
                // save results to txt file    
                try (FileWriter outFile = new FileWriter("RESULTS_"+Results_Time+".txt",true)) {
                    outFile.write(Results_LSTM_jTextArea.getText());
                }                
            }
            
        } catch (Exception ex) {
            Logger.getLogger(DL_JFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            
    }//GEN-LAST:event_Traine_Evaluate_LSTM_jButtonActionPerformed

    private void Validation_Type_RNN_jComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Validation_Type_RNN_jComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Validation_Type_RNN_jComboBoxActionPerformed

    private void Brows_Dataset_RNN_jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Brows_Dataset_RNN_jButton1ActionPerformed
        // TODO add your handling code here:
        FileNameExtensionFilter extensionFilter = new FileNameExtensionFilter("Text File", "txt");
        final JFileChooser Open_FileChooser = new JFileChooser();
        Open_FileChooser.setApproveButtonText("Open");
        Open_FileChooser.setFileFilter(extensionFilter);
        int actionDialog = Open_FileChooser.showOpenDialog(this);
        if (actionDialog != JFileChooser.APPROVE_OPTION) 
        {
            return;
        }
        File file = Open_FileChooser.getSelectedFile();
        
        Tokens_File_jTextField.setText(file.getAbsolutePath());
        
    }//GEN-LAST:event_Brows_Dataset_RNN_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
                
        Dataset_Preparation D_P = new Dataset_Preparation();
        
        /*
        //FC
        String FT_Bin_Model_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE\\SYSE_Combined_Unlabeled_Tokens.bin" ;
        String Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE\\FC\\Lower_Case_FC.txt_Unlabeled_Tokens.txt" ;
        String Labeled_Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE\\FC\\Lower_Case_FC.txt_Labeled_Tokens.txt" ;
        D_P.Get_FT_Vectors(
                 Tokens_File,
                 Labeled_Tokens_File,
                 FT_Bin_Model_File
         );
        
        // AE
        FT_Bin_Model_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE\\SYSE_Combined_Unlabeled_Tokens.bin" ;
        Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE\\AE\\Lower_Case_AE.txt_Unlabeled_Tokens.txt" ;
        Labeled_Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE\\AE\\Lower_Case_AE.txt_Labeled_Tokens.txt" ;
        D_P.Get_FT_Vectors(
                 Tokens_File,
                 Labeled_Tokens_File,
                 FT_Bin_Model_File
         );
        // AU
        FT_Bin_Model_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE\\SYSE_Combined_Unlabeled_Tokens.bin" ;
        Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE\\AU\\Lower_Case_AU.txt_Unlabeled_Tokens.txt" ;
        Labeled_Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE\\AU\\Lower_Case_AU.txt_Labeled_Tokens.txt" ;
        D_P.Get_FT_Vectors(
                 Tokens_File,
                 Labeled_Tokens_File,
                 FT_Bin_Model_File
         );
        
        // PU
        FT_Bin_Model_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE\\SYSE_Combined_Unlabeled_Tokens.bin" ;
        Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE\\PU\\Lower_Case_PU.txt_Unlabeled_Tokens.txt" ;
        Labeled_Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE\\PU\\Lower_Case_PU.txt_Labeled_Tokens.txt" ;
        D_P.Get_FT_Vectors(
                 Tokens_File,
                 Labeled_Tokens_File,
                 FT_Bin_Model_File
         );
        */
        /*
        // for vector size 50
        //FC
        String FT_Bin_Model_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE_Vect_Size_50\\SYSE_Combined_Unlabeled_Tokens.bin" ;
        String Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE_Vect_Size_50\\Lower_Case_FC.txt_Unlabeled_Tokens.txt" ;
        String Labeled_Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE_Vect_Size_50\\Lower_Case_FC.txt_Labeled_Tokens.txt" ;
        D_P.Get_FT_Vectors(
                 Tokens_File,
                 Labeled_Tokens_File,
                 FT_Bin_Model_File
         );
        */
        
        // for vector size 200
        //FC
        String FT_Bin_Model_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE_Vect_Size_200\\SYSE_Combined_Unlabeled_Tokens.bin" ;
        String Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE_Vect_Size_200\\Lower_Case_FC.txt_Unlabeled_Tokens.txt" ;
        String Labeled_Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE_Vect_Size_200\\Lower_Case_FC.txt_Labeled_Tokens.txt" ;
        D_P.Get_FT_Vectors(
                 Tokens_File,
                 Labeled_Tokens_File,
                 FT_Bin_Model_File
         );
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Dataset_Preparation D_P = new Dataset_Preparation();
        /* vector size 100
        
        //FC
        String Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE\\FC\\Lower_Case_FC.txt_Unlabeled_Tokens.txt" ;
        String Labeled_Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE\\FC\\Lower_Case_FC.txt_Labeled_Tokens.txt" ;
        D_P.Get_DF_IF(Tokens_File, Labeled_Tokens_File, 100);
        
        //AE
        Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE\\AE\\Lower_Case_AE.txt_Unlabeled_Tokens.txt" ;
        Labeled_Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE\\AE\\Lower_Case_AE.txt_Labeled_Tokens.txt" ;
        D_P.Get_DF_IF(Tokens_File, Labeled_Tokens_File, 100);
        
        //AU
        Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE\\AU\\Lower_Case_AU.txt_Unlabeled_Tokens.txt" ;
        Labeled_Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE\\AU\\Lower_Case_AU.txt_Labeled_Tokens.txt" ;
        D_P.Get_DF_IF(Tokens_File, Labeled_Tokens_File, 100);
        
        //PU
        Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE\\PU\\Lower_Case_PU.txt_Unlabeled_Tokens.txt" ;
        Labeled_Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE\\PU\\Lower_Case_PU.txt_Labeled_Tokens.txt" ;
        D_P.Get_DF_IF(Tokens_File, Labeled_Tokens_File, 100);
        */
        
        String Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE_Vect_Size_50\\Lower_Case_FC.txt_Unlabeled_Tokens.txt" ;
        String Labeled_Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE_Vect_Size_50\\Lower_Case_FC.txt_Labeled_Tokens.txt" ;
        D_P.Get_DF_IF(Tokens_File, Labeled_Tokens_File, 50);
        
        Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE_Vect_Size_200\\Lower_Case_FC.txt_Unlabeled_Tokens.txt" ;
        Labeled_Tokens_File = "E:\\ZM\\Research\\Features_Learning_For_Deep_Vul_Detec\\Experiments\\Dataset1_SYSE_Vect_Size_200\\Lower_Case_FC.txt_Labeled_Tokens.txt" ;
        D_P.Get_DF_IF(Tokens_File, Labeled_Tokens_File, 200);
        
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DL_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DL_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DL_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DL_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DL_JFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox Balance_Dataset_LSTM_jCheckBox;
    private javax.swing.JCheckBox Balance_Dataset_jCheckBox;
    private javax.swing.JButton Brows_Dataset_LSTM_jButton;
    private javax.swing.JButton Brows_Dataset_RNN_jButton1;
    private javax.swing.JFileChooser Dataset_jFileChooser;
    private javax.swing.JTextField Num_Folds_LSTM_jTextField;
    private javax.swing.JTextField Num_Folds_jTextField;
    private javax.swing.JTextField Opts_LSTM_jTextField;
    private javax.swing.JTextField Opts_jTextField;
    private javax.swing.JTextArea Results_LSTM_jTextArea;
    private javax.swing.JTextArea Results_jTextArea;
    private javax.swing.JTextArea Results_jTextArea2;
    private javax.swing.JButton Slct_Trn_Dtst_jButton;
    private javax.swing.JTextField Tokens_File_jTextField;
    private javax.swing.JButton Traine_Evaluate_LSTM_jButton;
    private javax.swing.JButton Traine_jButton;
    private javax.swing.JTextField Trn_Dtst_LSTM_jTextField;
    private javax.swing.JTextField Trn_Dtst_jTextField;
    private javax.swing.JComboBox<String> Validation_Type_RNN_jComboBox;
    private javax.swing.JComboBox<String> Validation_Type_jComboBox;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
